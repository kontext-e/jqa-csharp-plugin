<jqassistant-rules xmlns="http://schema.jqassistant.org/rule/v2.0"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://schema.jqassistant.org/rule/v2.0 http://schema.jqassistant.org/rule/jqassistant-rule-v2.0.xsd">

    <concept id="C#:Excluded">
        <description>Abstract Concepts used as Interface</description>
        <cypher><![CDATA[RETURN 0]]></cypher>
    </concept>

    <concept id="C#:Generated">
        <description>Abstract Concepts used as Interface</description>
        <cypher><![CDATA[RETURN 0]]></cypher>
    </concept>

    <concept id="C#:Exclude:Getter">
        <providesConcept refId="C#:Excluded"/>
        <requiresConcept refId="C#:Concept:Getter"/>
        <description>Marks Getter as Excluded, so other Concepts won't take them into account</description>
        <cypher><![CDATA[
            MATCH
                (getter:Getter:`C#`)
            SET
                getter:Excluded
            RETURN count(getter)
        ]]></cypher>
    </concept>

    <concept id="C#:Exclude:Setter">
        <providesConcept refId="C#:Excluded"/>
        <requiresConcept refId="C#:Concept:Setter"/>
        <description>Marks Setter as Excluded, so other Concepts won't take them into account</description>
        <cypher><![CDATA[
            MATCH
                (setter:Setter:`C#`)
            SET
                setter:Excluded
            RETURN count(setter)
        ]]></cypher>
    </concept>

    <concept id="C#:Exclude:Generated" severity='info'>
        <providesConcept refId="C#:Excluded"/>
        <requiresConcept refId="C#:Generated"/>
        <description>Marks all Generated SourceCode as Excluded</description>
        <cypher><![CDATA[
            MATCH
                (node:Generated:`C#`)
            SET
                node:Excluded
        ]]></cypher>
    </concept>

    <concept id="C#:Concept:Setter" severity="info">
        <description>Marks Setters as such</description>
        <cypher><![CDATA[
            MATCH
                (s:Method:`C#`)
            WHERE
                s.fqn ENDS WITH 'set'
            SET
                s:Setter:Accessor
            RETURN
                count(s)
        ]]></cypher>
    </concept>

    <concept id="C#:Concept:Getter" severity="info">
        <description>Marks Getters as such</description>
        <cypher><![CDATA[
            MATCH
                (g:Method:`C#`)
            WHERE
                g.fqn ENDS WITH 'get'
            SET
                g:Getter:Accessor
            RETURN
                count(g)
        ]]></cypher>
    </concept>

    <!--  rename  -->
    <concept id="C#:Namespaces:Levels" severity="info">
        <description>Adds int 'level' to each namespace</description>
        <cypher><![CDATA[
            MATCH
                (n:Namespace:`C#`)
            SET
                n.level = Size(Split(n.fqn, '.'))
            RETURN
                n
        ]]></cypher>
    </concept>

</jqassistant-rules>